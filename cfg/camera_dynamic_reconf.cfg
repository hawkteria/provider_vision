#!/usr/bin/env python
PACKAGE = "provider_vision"

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

bottom_gige = gen.add_group("bottom_gige")
bottom_gige.add("gain_mode", bool_t, 0, "True = Manual, False = Auto ", True)
bottom_gige.add("gain_value", double_t, 0, "Value for the gain", 1)
bottom_gige.add("gamma_value", double_t, 0, "Value for the gamma", 0)
bottom_gige.add("exposure_mode", bool_t, 0, "True = Manual, False = Auto", False)
bottom_gige.add("exposure_value", double_t, 0, "Value for the exposure", 1000)
bottom_gige.add("saturation_value", double_t, 0, "Value for the saturation", 0)
bottom_gige.add("shutter_mode", bool_t, 0, "True = Manual, False = Auto ", False)
bottom_gige.add("shutter_value", double_t, 0, "Value for the shutter", 500.0)
bottom_gige.add("framerate_value", double_t, 0, "Value for the framerate", 15)
bottom_gige.add("whitebalance_mode", bool_t, 0, "True = Manual , False = Auto", True)
bottom_gige.add("whitebalance_red_value", double_t, 0, "Value for the red in the white balance", 0)
bottom_gige.add("whitebalance_blue_value", double_t, 0, "Value for the blue in the white balance", 0)
bottom_gige.add("autobrightness_mode", bool_t, 0, "Value for the auto brightness", True)
bottom_gige.add("autobrightness_target", int_t, 0, "Value for the target brightness", 100)
bottom_gige.add("autobrightness_variation", int_t, 0, "Value for the variation of the brightness", 16)
bottom_gige.add("width_value", int_t, 0, "Value for the width on the image", 968)
bottom_gige.add("height_value", int_t, 0, "Value for the height", 608)
bottom_gige.add("x_offset", int_t, 0, "Offset on the X axis", 484)
bottom_gige.add("y_offset", int_t, 0, "Offset on the Y axis", 304)
bottom_gige.add("format", int_t, 0, "Value for the variation of the brightness", 17301513)


front_gige = gen.add_group("front_gige")
front_gige.add("gain_mode", bool_t, 0, "True = Manual, False = Auto ", True)
front_gige.add("gain_value", double_t, 0, "Value for the gain", 1)
front_gige.add("gamma_value", double_t, 0, "Value for the gamma", 0)
front_gige.add("exposure_mode", bool_t, 0, "True = Manual, False = Auto", False)
front_gige.add("exposure_value", double_t, 0, "Value for the exposure", 1000)
front_gige.add("saturation_value", double_t, 0, "Value for the saturation", 0)
front_gige.add("shutter_mode", bool_t, 0, "True = Manual, False = Auto ", False)
front_gige.add("shutter_value", double_t, 0, "Value for the shutter", 500.0)
front_gige.add("framerate_value", double_t, 0, "Value for the framerate", 15)
front_gige.add("whitebalance_mode", bool_t, 0, "True = Manual , False = Auto", True)
front_gige.add("whitebalance_red_value", double_t, 0, "Value for the red in the white balance", 0)
front_gige.add("whitebalance_blue_value", double_t, 0, "Value for the blue in the white balance", 0)
front_gige.add("autobrightness_mode", bool_t, 0, "Value for the auto brightness", True)
front_gige.add("autobrightness_target", int_t, 0, "Value for the target brightness", 100)
front_gige.add("autobrightness_variation", int_t, 0, "Value for the variation of the brightness", 16)
front_gige.add("width_value", int_t, 0, "Value for the width on the image", 968)
front_gige.add("height_value", int_t, 0, "Value for the height", 608)
front_gige.add("x_offset", int_t, 0, "Offset on the X axis", 484)
front_gige.add("y_offset", int_t, 0, "Offset on the Y axis", 304)
front_gige.add("format", int_t, 0, "Value for the variation of the brightness", 17301513)



front_guppy = gen.add_group("front_guppy")
front_guppy.add("gain_mode", bool_t, 0, "True = Manual, False = Auto ", True)
front_guppy.add("gain_value", double_t, 0, "Value for the gain", 1, 680)
front_guppy.add("gamma_value", double_t, 0, "Value for the gamma", 1, 0, 1)
front_guppy.add("exposure_mode", bool_t, 0, "True = Manual, False = Auto", False)
front_guppy.add("exposure_value", double_t, 0, "Value for the exposure", 100, 50, 205)
front_guppy.add("saturation_value", double_t, 0, "Value for the saturation", 0)
front_guppy.add("shutter_mode", bool_t, 0, "True = Manual, False = Auto ", False)
front_guppy.add("shutter_value", double_t, 0, "Value for the shutter", 500.0)
front_guppy.add("framerate_value", double_t, 0, "Value for the framerate", 15)
front_guppy.add("whitebalance_mode", bool_t, 0, "True = Manual , False = Auto", True)
front_guppy.add("whitebalance_red_value", double_t, 0, "Value for the red in the white balance", 0)
front_guppy.add("whitebalance_blue_value", double_t, 0, "Value for the blue in the white balance", 0)

exit(gen.generate(PACKAGE, "provider_vision", "Camera_Parameters_"))